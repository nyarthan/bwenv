on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

name: CI

env:
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  # check:
  #   name: Check, Format, Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: mozilla-actions/sccache-action@v0.0.3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #
  #     - name: Check
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: check
  #
  #     - name: Format
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check
  #
  #     - name: Lint
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, aarch64]
        lib: [gnu, musl]
        exclude:
          - os: macos-latest
            lib: musl

    steps:
      - uses: actions/checkout@v3
      - uses: mozilla-actions/sccache-action@v0.0.3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}-${
            { if startsWith(matrix.os, 'ubuntu') }}unknown-linux${{
            { else if startsWith(matrix.os, 'macos') }}applw-darwin${{
            { endif }}-${{ matrix.lib }}

  # build-linux:
  #   name: Build for x86_64-unknown-linux-musl
  #   needs: check
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: mozilla-actions/sccache-action@v0.0.3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         target: x86_64-unknown-linux-musl
  #
  #     - run: sudo apt-get update && sudo apt install musl-tools
  #
  #     - name: Build for x86_64-unknown-linux-musl
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         args: --release --target x86_64-unknown-linux-musl
  #
  #     - name: Store build artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: x86_64-unknown-linux-musl
  #         path: ./target/x86_64-unknown-linux-musl/release/bwenv
  #
  # build-darwin:
  #   name: Build Darwin
  #   needs: check
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: mozilla-actions/sccache-action@v0.0.3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         target: aarch64-apple-darwin
  #
  #     - name: Build aarch64-apple-darwin
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         args: --release --target aarch64-apple-darwin
  #
  #     - name: Store build artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: aarch64-apple-darwin
  #         path: ./target/aarch64-apple-darwin/release/bwenv
  #
  # release:
  #   name: Release
  #   needs:
  #     - build-linux
  #     - build-apple-silicon
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - name: Download build artifacts for x86_64-unknown-linux-musl
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: x86_64-unknown-linux-musl
  #         path: ./x86_64-unknown-linux-musl
  #
  #     - name: Download build artifacts for aarch64-apple-darwin
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: aarch64-apple-darwin
  #         path: ./aarch64-apple-darwin
  #
  #     - name: Create archive for x86_64-unknown-linux-musl
  #       run: zip -r -j bwenv-x86_64-unknown-linux-musl.zip x86_64-unknown-linux-musl/bwenv
  #
  #     - name: Create archive for aarch64-apple-darwin
  #       run: zip -r -j bwenv-aarch64-apple-darwin.zip aarch64-apple-darwin/bwenv
  #
  #     - name: Read version from Cargo.toml
  #       id: get_version
  #       run: echo "version=$(awk -F' = ' '/^version/ {gsub(/"/, "", $2); print $2}' Cargo.toml)" >> $GITHUB_OUTPUT
  #
  #     - name: ls
  #       run: ls -la
  #
  #     - name: Create Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: |
  #           ./bwenv-x86_64-unknown-linux-musl.zip
  #           ./bwenv-aarch64-apple-darwin.zip
  #         tag_name: "v${{ steps.get_version.outputs.version }}"
  #         name: "Release v${{ steps.get_version.outputs.version }}"
